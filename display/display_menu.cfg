### DISABLEMENTS ###
[menu __main __octoprint]
type: disabled

[menu __main __control __fanonoff]
type: disabled

[menu __main __control __caselightonoff]
type: disabled

### Filament ###
[menu __main __filament __hotloadf]
type: input
name: H load: {menu.input}
input: 230
input_min: 180
input_max: 300
input_step: 10
gcode:
    HOT_LOAD T={menu.input}

[menu __main __filament __hotunloadf]
type: input
name: H unload: {menu.input}
input: 230
input_min: 180
input_max: 300
input_step: 10
gcode:
    HOT_UNLOAD T={menu.input}

[menu __main __filament __loadf]
type: command
name: Load Filament
gcode:
    LOAD_FILAMENT

[menu __main __filament __loads]
type: disabled
    
[menu __main __filament __unloadf]
type: command
name: Unload Filament
gcode:
    UNLOAD_FILAMENT
    
[menu __main __filament __unloads]
type: disabled

[menu __main __filament __feedfast]
type: input
name: Feed fast: {'%.1f' % menu.input}
input: 10
input_step: 10
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E{'%.1f' % menu.input} F300
    RESTORE_GCODE_STATE NAME=__filament__load

### Control Menu ###

[menu __main __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.1
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}

# Additional controll commands
[menu __main __control __G32]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: G32
gcode: G32

[menu __main __control __QGL]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: QGL
gcode: QUAD_GANTRY_LEVEL

[menu __main __control __parkfront]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park front
gcode: PARKFRONT

[menu __main __control __parkfrontlow]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park front low
gcode: PARKFRONTLOW

[menu __main __control __parkrear]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park rear
gcode: PARKREAR

[menu __main __control __parkcenter]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park center
gcode: PARKCENTER

[menu __main __control __parkbed]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park bed
gcode: PARKBED

[menu __main __control __off]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: OFF
gcode: OFF

### Temp Menu ###
[menu __main __temp __heatsoak]
type: input
name: Heatsoak: {menu.input}
input: 110
input_min: 80
input_max: 110
input_step: 10
gcode:
    HEATSOAK T={menu.input}